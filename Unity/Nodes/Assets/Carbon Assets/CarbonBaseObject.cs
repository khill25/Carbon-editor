// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace CarbonDatabase {
	public abstract class CarbonBaseObject : Object, IEquatable<CarbonBaseObject> {

		/*
		 * The generated ID of the object. This will* [should] always
		 * be unique. This is a guarented way to check for equality to other
		 * carbon objects
		 */ 
		protected Guid _ID = Guid.Empty;
		public Guid ID { get {return _ID;} }

		/*
		 * The name of this object. Useful for reference from a script
		 * script item, or other object
		 */
		public String Name { get; set; }

		/*
		 * Used for expanded info, like notes or comments 
		 */
		public String Text { get; set; }

		public abstract String AssemblyName { get; }

		// Should this have a type such as 
		// input/output/variable? or something?

		// TODO add the world space vector3?
		// TODO add location,rotation,scale vectors???
		// TODO add other unity things like tag, parent game object
		// name, attached objects???

		public CarbonBaseObject() {
			this._ID = Guid.NewGuid();
		}

		public CarbonBaseObject(Guid ID) {
			this._ID = ID;
		}

		// Equals codes
		public override int GetHashCode() {
			return this.ID.GetHashCode();
		}

		public bool Equals(CarbonBaseObject other) {
			return this.ID.Equals(other.ID);
		}

		public List<CarbonBaseObject> Children { get; set; }
	}
}

